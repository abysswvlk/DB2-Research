/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;
import control.DBConnection;
import control.PhoneGuideController;
import control.PersonController;
import control.PhoneController;
import control.UIController;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Locale;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import model.Phone;
import model.PhoneGuide;
import model.Person;

/**
 *
 * @author Ailer
 */
public class UserGUI extends javax.swing.JFrame {
    private DBConnection connection;
    private PhoneGuideController phoneGuideController = new PhoneGuideController();
    private PhoneGuideController queryPG = new PhoneGuideController();
    private PersonController personController = new PersonController();
    private PhoneController phoneController = new PhoneController();
    private List<Component> toPrincipalColor;
    private List<Component> componentTrees;
    private boolean isDarkMode;
    
    /**
     * Creates new form MainGUI
     */
    
    public UserGUI(boolean isDarkMode) {
        new UserGUI(isDarkMode, new DBConnection());
    }
    
    public UserGUI(boolean isDarkMode, DBConnection connection) {
        UIController.setEN();
        this.isDarkMode = isDarkMode;
        this.connection = connection;
        initComponents();
        toPrincipalColor = Arrays.asList(queryPanel, resultsPanel, pInfo, menuBar,
            menuOtrosConfig, menuOtrosAbout, resultsList, cbCompany, textName, textPersonID,
            textLastName, textPhoneNumber, jlID, jlName, jlLastName, jlNumber, jlCompany,
            othersConfig, othersAbout, pOthersConfig, pOthersAbout
        );
        componentTrees = Arrays.asList(this, othersConfig, othersAbout);
        
        loadData();
        updateResultsList();
        
        setLocationRelativeTo(null);
        UIController.setLookAndFeel(this,"Nimbus");
        UIController.setOnlyNumber(textPersonID, 9);
        UIController.setOnlyNumber(textPhoneNumber, 8);
        
        setResultsComponets(false);
        cleanLabelResult();
        UIController.firstSetMode(isDarkMode, toPrincipalColor, componentTrees, this);
        resultsPanel.setEnabled(false);
        resultsPanel.setVisible(false);
    }
    
    private void loadData(){
        personController = connection.getPeople();
        phoneController = connection.getPhone();
        phoneGuideController = connection.getPhoneGuide();
    }
    
    private void cleanLabelResult() {
        jlID.setText("    ");
        jlName.setText("    ");
        jlLastName.setText("    ");
        jlCompany.setText("    ");
        jlNumber.setText("    ");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        othersAbout = new javax.swing.JDialog();
        pOthersAbout = new javax.swing.JPanel();
        othersBClose = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        othersConfig = new javax.swing.JDialog();
        pOthersConfig = new javax.swing.JPanel();
        bGuardarConf = new javax.swing.JButton();
        labTemas = new javax.swing.JLabel();
        temas = new java.awt.Choice();
        queryPanel = new javax.swing.JPanel();
        bCleanInfo = new javax.swing.JButton();
        bCleanQuery = new javax.swing.JButton();
        bQuery = new javax.swing.JButton();
        bResults = new javax.swing.JButton();
        textName = new javax.swing.JTextField();
        textLastName = new javax.swing.JTextField();
        textPhoneNumber = new javax.swing.JTextField();
        textPersonID = new javax.swing.JTextField();
        pCompany = new javax.swing.JPanel();
        cbCompany = new javax.swing.JComboBox<>();
        jLMatching = new javax.swing.JLabel();
        jCBPersonID = new javax.swing.JCheckBox();
        jCBName = new javax.swing.JCheckBox();
        jCBLastName = new javax.swing.JCheckBox();
        jCBPhoneNumber = new javax.swing.JCheckBox();
        resultsPanel = new javax.swing.JPanel();
        resultsSPList = new javax.swing.JScrollPane();
        resultsList = new javax.swing.JList<>();
        pInfo = new javax.swing.JPanel();
        jlID = new javax.swing.JLabel();
        jlName = new javax.swing.JLabel();
        jlLastName = new javax.swing.JLabel();
        jlNumber = new javax.swing.JLabel();
        jlCompany = new javax.swing.JLabel();
        bBackToQuery = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        menuOtros = new javax.swing.JMenu();
        menuOtrosConfig = new javax.swing.JMenuItem();
        menuOtrosAbout = new javax.swing.JMenuItem();

        othersAbout.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        othersAbout.setTitle("Research - About");
        othersAbout.setFocusable(false);
        othersAbout.setMinimumSize(null);
        othersAbout.setResizable(false);
        othersAbout.setSize(new java.awt.Dimension(340, 260));
        othersAbout.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                othersAboutWindowClosed(evt);
            }
        });
        othersAbout.getContentPane().setLayout(new javax.swing.BoxLayout(othersAbout.getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        othersBClose.setText("Close");
        othersBClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                othersBCloseActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Group Members:\n        Alvarado Aguero Ailer Josue\n        Arce Vargas Armando Andres\n        Ávila Ramírez Paublo Alexander\n        Martinez Rivera German Josue\n\nDatabase:\n        Oracle NoSQL\n                                                                                2023");
        jTextArea1.setBorder(null);
        jTextArea1.setFocusable(false);
        jTextArea1.setOpaque(false);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout pOthersAboutLayout = new javax.swing.GroupLayout(pOthersAbout);
        pOthersAbout.setLayout(pOthersAboutLayout);
        pOthersAboutLayout.setHorizontalGroup(
            pOthersAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pOthersAboutLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pOthersAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pOthersAboutLayout.createSequentialGroup()
                        .addGap(0, 310, Short.MAX_VALUE)
                        .addComponent(othersBClose))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        pOthersAboutLayout.setVerticalGroup(
            pOthersAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pOthersAboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(othersBClose)
                .addContainerGap())
        );

        othersAbout.getContentPane().add(pOthersAbout);

        othersConfig.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        othersConfig.setTitle("Research - Configuration");
        othersConfig.setMinimumSize(new java.awt.Dimension(230, 200));
        othersConfig.setResizable(false);
        othersConfig.setSize(new java.awt.Dimension(240, 200));
        othersConfig.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                othersConfigWindowClosed(evt);
            }
        });
        othersConfig.getContentPane().setLayout(new javax.swing.BoxLayout(othersConfig.getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        bGuardarConf.setText("Apply");
        bGuardarConf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGuardarConfActionPerformed(evt);
            }
        });

        labTemas.setText("Theme");

        temas.add("DarkMode");
        temas.add("LightMode");
        temas.setName(""); // NOI18N

        javax.swing.GroupLayout pOthersConfigLayout = new javax.swing.GroupLayout(pOthersConfig);
        pOthersConfig.setLayout(pOthersConfigLayout);
        pOthersConfigLayout.setHorizontalGroup(
            pOthersConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pOthersConfigLayout.createSequentialGroup()
                .addContainerGap(173, Short.MAX_VALUE)
                .addComponent(bGuardarConf)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pOthersConfigLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(labTemas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(temas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        pOthersConfigLayout.setVerticalGroup(
            pOthersConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pOthersConfigLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pOthersConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(temas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labTemas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addComponent(bGuardarConf)
                .addContainerGap())
        );

        othersConfig.getContentPane().add(pOthersConfig);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Research - User GUI");
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(482, 448));
        setPreferredSize(new java.awt.Dimension(482, 448));
        setResizable(false);
        setSize(new java.awt.Dimension(482, 448));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        queryPanel.setBackground(new java.awt.Color(255, 255, 255));
        queryPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bCleanInfo.setText("Clean Info");
        bCleanInfo.setMaximumSize(new java.awt.Dimension(100, 32));
        bCleanInfo.setMinimumSize(new java.awt.Dimension(100, 32));
        bCleanInfo.setPreferredSize(new java.awt.Dimension(100, 32));
        bCleanInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCleanInfoActionPerformed(evt);
            }
        });
        queryPanel.add(bCleanInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 340, -1, -1));

        bCleanQuery.setText("Clean Query");
        bCleanQuery.setEnabled(false);
        bCleanQuery.setMaximumSize(new java.awt.Dimension(100, 32));
        bCleanQuery.setMinimumSize(new java.awt.Dimension(100, 32));
        bCleanQuery.setPreferredSize(new java.awt.Dimension(100, 32));
        bCleanQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCleanQueryActionPerformed(evt);
            }
        });
        queryPanel.add(bCleanQuery, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 340, -1, -1));

        bQuery.setText("Make Query");
        bQuery.setMaximumSize(new java.awt.Dimension(100, 32));
        bQuery.setMinimumSize(new java.awt.Dimension(100, 32));
        bQuery.setPreferredSize(new java.awt.Dimension(100, 32));
        bQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bQueryActionPerformed(evt);
            }
        });
        queryPanel.add(bQuery, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 340, -1, -1));

        bResults.setText("Show Query");
        bResults.setEnabled(false);
        bResults.setMaximumSize(new java.awt.Dimension(100, 32));
        bResults.setMinimumSize(new java.awt.Dimension(100, 32));
        bResults.setPreferredSize(new java.awt.Dimension(100, 32));
        bResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bResultsActionPerformed(evt);
            }
        });
        queryPanel.add(bResults, new org.netbeans.lib.awtextra.AbsoluteConstraints(332, 340, -1, -1));

        textName.setBorder(javax.swing.BorderFactory.createTitledBorder("Name"));
        queryPanel.add(textName, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 80, 436, -1));

        textLastName.setBorder(javax.swing.BorderFactory.createTitledBorder("Last Name"));
        queryPanel.add(textLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 140, 436, -1));

        textPhoneNumber.setBorder(javax.swing.BorderFactory.createTitledBorder("Phone Number"));
        queryPanel.add(textPhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 200, 436, -1));

        textPersonID.setBorder(javax.swing.BorderFactory.createTitledBorder("Identification"));
        queryPanel.add(textPersonID, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 20, 436, -1));

        pCompany.setBorder(javax.swing.BorderFactory.createTitledBorder("Company"));
        pCompany.setOpaque(false);
        pCompany.setLayout(new javax.swing.BoxLayout(pCompany, javax.swing.BoxLayout.LINE_AXIS));

        cbCompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "Claro", "Movistar", "Kolbi" }));
        pCompany.add(cbCompany);

        queryPanel.add(pCompany, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 260, 440, -1));

        jLMatching.setText("Exact");
        jLMatching.setToolTipText("");
        queryPanel.add(jLMatching, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 4, -1, -1));
        jLMatching.getAccessibleContext().setAccessibleName("");

        jCBPersonID.setOpaque(false);
        queryPanel.add(jCBPersonID, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, -1, -1));

        jCBName.setOpaque(false);
        queryPanel.add(jCBName, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, -1, -1));

        jCBLastName.setOpaque(false);
        queryPanel.add(jCBLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 160, -1, -1));

        jCBPhoneNumber.setOpaque(false);
        queryPanel.add(jCBPhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 220, -1, -1));

        getContentPane().add(queryPanel);

        resultsPanel.setBackground(new java.awt.Color(255, 255, 255));

        resultsSPList.setBackground(new java.awt.Color(255, 255, 255));
        resultsSPList.setViewportBorder(javax.swing.BorderFactory.createTitledBorder("Phone"));

        resultsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultsListMouseClicked(evt);
            }
        });
        resultsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                resultsListValueChanged(evt);
            }
        });
        resultsSPList.setViewportView(resultsList);

        pInfo.setBackground(new java.awt.Color(255, 255, 255));
        pInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Information"));

        jlID.setText(" ");
        jlID.setBorder(javax.swing.BorderFactory.createTitledBorder("Identificaction:"));

        jlName.setText(" ");
        jlName.setBorder(javax.swing.BorderFactory.createTitledBorder("Name:"));

        jlLastName.setText("  ");
        jlLastName.setBorder(javax.swing.BorderFactory.createTitledBorder("LastName:"));

        jlNumber.setText("  ");
        jlNumber.setBorder(javax.swing.BorderFactory.createTitledBorder("Number:"));

        jlCompany.setText("  ");
        jlCompany.setBorder(javax.swing.BorderFactory.createTitledBorder("Company:"));

        javax.swing.GroupLayout pInfoLayout = new javax.swing.GroupLayout(pInfo);
        pInfo.setLayout(pInfoLayout);
        pInfoLayout.setHorizontalGroup(
            pInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlLastName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlCompany, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pInfoLayout.setVerticalGroup(
            pInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pInfoLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jlID, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlName, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bBackToQuery.setText("New Query");
        bBackToQuery.setMaximumSize(new java.awt.Dimension(100, 32));
        bBackToQuery.setMinimumSize(new java.awt.Dimension(100, 32));
        bBackToQuery.setPreferredSize(new java.awt.Dimension(100, 32));
        bBackToQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBackToQueryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout resultsPanelLayout = new javax.swing.GroupLayout(resultsPanel);
        resultsPanel.setLayout(resultsPanelLayout);
        resultsPanelLayout.setHorizontalGroup(
            resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(resultsSPList, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(bBackToQuery, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        resultsPanelLayout.setVerticalGroup(
            resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(resultsPanelLayout.createSequentialGroup()
                        .addComponent(resultsSPList, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bBackToQuery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        bBackToQuery.getAccessibleContext().setAccessibleDescription("");

        getContentPane().add(resultsPanel);

        menuOtros.setText("Others");

        menuOtrosConfig.setText("Configuration");
        menuOtrosConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuOtrosConfigActionPerformed(evt);
            }
        });
        menuOtros.add(menuOtrosConfig);

        menuOtrosAbout.setText("About");
        menuOtrosAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuOtrosAboutActionPerformed(evt);
            }
        });
        menuOtros.add(menuOtrosAbout);

        menuBar.add(menuOtros);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuOtrosConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuOtrosConfigActionPerformed
        setEnabled(false);
        UIController.centerDialog(othersConfig);
        othersConfig.setVisible(true);
        othersConfig.setEnabled(true);
    }//GEN-LAST:event_menuOtrosConfigActionPerformed
    
    private void setResultsComponets(boolean newState){
        resultsSPList.setEnabled(newState);
        resultsSPList.setFocusable(newState);
        resultsList.setEnabled(newState);
        resultsList.setFocusable(newState);
        pInfo.setEnabled(newState);
        pInfo.setFocusable(newState);
        for (Component c: pInfo.getComponents()){
            c.setEnabled(newState);
            c.setFocusable(newState);
        }
    }

    private void menuOtrosAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuOtrosAboutActionPerformed
        setEnabled(false);
        UIController.centerDialog(othersAbout);
        othersAbout.setVisible(true);
        othersAbout.setEnabled(true);
    }//GEN-LAST:event_menuOtrosAboutActionPerformed

    private void bCleanInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCleanInfoActionPerformed
        cbCompany.setSelectedIndex(0);
        textLastName.setText("");
        textName.setText("");
        textPhoneNumber.setText("");
        
        this.requestFocus();
    }//GEN-LAST:event_bCleanInfoActionPerformed
    
    private void bQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bQueryActionPerformed
        this.requestFocus();
        queryPG = new PhoneGuideController();
        // Filtro
        String company = cbCompany.getSelectedItem().toString();
        for (PhoneGuide pg: phoneGuideController.getAllPhoneGuides()){
            List<Boolean> listFlags = new ArrayList<>(Collections.nCopies(5, false));
            Person person = personController.getPersonById(pg.getIdPerson());
            Phone phone = phoneController.getPhoneByPhoneID(pg.getPhoneNumber());
            
            listFlags.set(0, UIController.filterByVariable(String.valueOf(person.getIdPerson()), textPersonID.getText(), !jCBPersonID.isSelected(), !textPersonID.getText().isEmpty()));
            listFlags.set(1, UIController.filterByVariable(person.getName(), textName.getText(), !jCBName.isSelected(), !textName.getText().isEmpty()));
            listFlags.set(2, UIController.filterByVariable(person.getLastName(), textLastName.getText(), !jCBLastName.isSelected(), !textLastName.getText().isEmpty()));
            listFlags.set(3, UIController.filterByVariable(String.valueOf(phone.getPhoneNumber()), textPhoneNumber.getText(), !jCBPhoneNumber.isSelected(), !textPhoneNumber.getText().isEmpty()));
            listFlags.set(4, UIController.filterByVariable(phone.getCompany(), company, true, cbCompany.getSelectedIndex() != 0));
            
            if (!listFlags.contains(false)) {
                queryPG.addPhoneGuide(pg);
            }
        }
        System.out.println("\n------------------------------------ Lista Filtrada ------------------------------------ ");
        System.out.println(queryPG.toString());
        updateResultsList();
    }//GEN-LAST:event_bQueryActionPerformed

    private void resultsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultsListMouseClicked
        if (resultsList.getSelectedValue() != null){
            System.out.println("Número seleccionado: " + resultsList.getSelectedValue());
            
            String selectedValue = resultsList.getSelectedValue();
            int phoneNumber = Integer.parseInt(selectedValue);
            
            PhoneGuide pg = phoneGuideController.findPhoneGuideByNumber(phoneNumber);
            Person person = personController.getPersonById(pg.getIdPerson());
            Phone phone = phoneController.getPhoneByPhoneID(pg.getPhoneNumber());

            jlID.setText(person.getIdPerson() + "");
            jlName.setText(person.getName());
            jlLastName.setText(person.getLastName());
            jlCompany.setText(phone.getCompany());
            jlNumber.setText(phone.getPhoneNumber()+ "");
        } else{
            cleanLabelResult();
        }
    }//GEN-LAST:event_resultsListMouseClicked

    private void resultsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_resultsListValueChanged
        resultsListMouseClicked(null);
    }//GEN-LAST:event_resultsListValueChanged

    private void bResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bResultsActionPerformed
        resultsPanel.setEnabled(true);
        resultsPanel.setVisible(true);
        
        queryPanel.setEnabled(false);
        queryPanel.setVisible(false);
        
        // Update look and feel
        UIController.setLookAndFeel(this,"Metal");
        UIController.setLookAndFeel(this,"Nimbus");
        SwingUtilities.updateComponentTreeUI(this);

        // Repaint components
        repaint();
        revalidate();
        pack();
    }//GEN-LAST:event_bResultsActionPerformed

    private void bBackToQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBackToQueryActionPerformed
        resultsPanel.setEnabled(false);
        resultsPanel.setVisible(false);
        
        queryPanel.setEnabled(true);
        queryPanel.setVisible(true);
    }//GEN-LAST:event_bBackToQueryActionPerformed

    private void bCleanQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCleanQueryActionPerformed
        queryPG = new PhoneGuideController();
        updateResultsList();
        this.requestFocus();
    }//GEN-LAST:event_bCleanQueryActionPerformed

    private void othersBCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_othersBCloseActionPerformed
        UIController.focusMainGUI(this);
        othersAbout.dispose();
    }//GEN-LAST:event_othersBCloseActionPerformed

    private void othersAboutWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_othersAboutWindowClosed
        UIController.focusMainGUI(this);
        othersAbout.dispose();
    }//GEN-LAST:event_othersAboutWindowClosed

    private void bGuardarConfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGuardarConfActionPerformed
        UIController.focusMainGUI(this);
        if ("DarkMode".equals(temas.getSelectedItem())){
            UIController.setDarkMode(toPrincipalColor, componentTrees, this);
            isDarkMode = true;
        } else {
            UIController.setLightMode(toPrincipalColor, componentTrees, this);
            isDarkMode = false;
        }
        othersConfig.dispose();
    }//GEN-LAST:event_bGuardarConfActionPerformed

    private void othersConfigWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_othersConfigWindowClosed
        UIController.focusMainGUI(this);
        othersConfig.dispose();
    }//GEN-LAST:event_othersConfigWindowClosed
    
    private void updateResultsList(){
        resultsList.clearSelection();
        List<String> listData = new ArrayList<>();
        queryPG.getAllPhoneGuides().forEach(phoneGuide -> {
            listData.add(String.valueOf(phoneGuide.getPhoneNumber()));
        });

        resultsList.setListData(listData.toArray(new String[0]));
        if (!queryPG.getAllPhoneGuides().isEmpty()){
            setResultsComponets(true);
            resultsList.setSelectedIndex(0);
            resultsList.setEnabled(true);
            resultsSPList.setEnabled(true);
            bCleanQuery.setEnabled(true);
            bResults.setEnabled(true);
        } else{
            setResultsComponets(false);
            bResults.setEnabled(false);
            bCleanQuery.setEnabled(false);
            resultsList.setEnabled(false);
            resultsSPList.setEnabled(false);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new UserGUI(true).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBackToQuery;
    private javax.swing.JButton bCleanInfo;
    private javax.swing.JButton bCleanQuery;
    private javax.swing.JButton bGuardarConf;
    private javax.swing.JButton bQuery;
    private javax.swing.JButton bResults;
    private javax.swing.JComboBox<String> cbCompany;
    private javax.swing.JCheckBox jCBLastName;
    private javax.swing.JCheckBox jCBName;
    private javax.swing.JCheckBox jCBPersonID;
    private javax.swing.JCheckBox jCBPhoneNumber;
    private javax.swing.JLabel jLMatching;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel jlCompany;
    private javax.swing.JLabel jlID;
    private javax.swing.JLabel jlLastName;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlNumber;
    private javax.swing.JLabel labTemas;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuOtros;
    private javax.swing.JMenuItem menuOtrosAbout;
    private javax.swing.JMenuItem menuOtrosConfig;
    private javax.swing.JDialog othersAbout;
    private javax.swing.JButton othersBClose;
    private javax.swing.JDialog othersConfig;
    private javax.swing.JPanel pCompany;
    private javax.swing.JPanel pInfo;
    private javax.swing.JPanel pOthersAbout;
    private javax.swing.JPanel pOthersConfig;
    private javax.swing.JPanel queryPanel;
    private javax.swing.JList<String> resultsList;
    private javax.swing.JPanel resultsPanel;
    private javax.swing.JScrollPane resultsSPList;
    private java.awt.Choice temas;
    private javax.swing.JTextField textLastName;
    private javax.swing.JTextField textName;
    private javax.swing.JTextField textPersonID;
    private javax.swing.JTextField textPhoneNumber;
    // End of variables declaration//GEN-END:variables
}
