/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;
import control.PhoneController;
import control.PersonController;
import control.DBConnection;
import control.PhoneGuideController;
import control.UIController;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Locale;
import javax.swing.JDialog;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import model.Person;
import model.Phone;
import model.PhoneGuide;

/**
 *
 * @author Ailer
 */
public class AdminGUI extends javax.swing.JFrame {
    private PhoneGuideController phoneGuideController = new PhoneGuideController();
    private PersonController personController = new PersonController();
    private PhoneController phoneController = new PhoneController();
    private List<Component> toPrincipalColor;
    private List<Component> componentTrees;
    private boolean isDarkMode = true;
    private DBConnection connection;
    
    /**
     * Creates new form MainGUI
     * @param isDarkMode
     */

    public AdminGUI(boolean isDarkMode) {
        new AdminGUI(isDarkMode, new DBConnection());
    }
    
    public AdminGUI(boolean isDarkMode, DBConnection connection) {
        UIController.setEN();

        this.isDarkMode = isDarkMode;
        this.connection = connection;
        initComponents();
        toPrincipalColor = Arrays.asList(pAddPerson, pAddPhone, pRemove, menuBar,
            menuOtrosConfig, menuOtrosAbout,  cbCompany, textName, textID,
            textLastName, tAPNumber,
            othersConfig, othersAbout, pOthersConfig, pOthersAbout
        );
        componentTrees = Arrays.asList(this, othersConfig, othersAbout);
        
        setLocationRelativeTo(null);
        UIController.setLookAndFeel(this,"Nimbus");
        UIController.setOnlyNumber(textID, 9);
        UIController.setOnlyNumber(tAPNumber, 8);

        UIController.firstSetMode(isDarkMode, toPrincipalColor, componentTrees, this);
        pAddPhone.setEnabled(false);
        pAddPhone.setVisible(false);
        
        loadData();
        updateIDList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        othersConfig = new javax.swing.JDialog();
        pOthersConfig = new javax.swing.JPanel();
        bGuardarConf = new javax.swing.JButton();
        labTemas = new javax.swing.JLabel();
        temas = new java.awt.Choice();
        othersAbout = new javax.swing.JDialog();
        pOthersAbout = new javax.swing.JPanel();
        othersBClose = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        tabbedMain = new javax.swing.JTabbedPane();
        pAddPerson = new javax.swing.JPanel();
        bAddPerson = new javax.swing.JButton();
        textName = new javax.swing.JTextField();
        textLastName = new javax.swing.JTextField();
        textID = new javax.swing.JTextField();
        pAddPhone = new javax.swing.JPanel();
        pPersonInfo = new javax.swing.JPanel();
        jlAPID = new javax.swing.JLabel();
        jlAPName = new javax.swing.JLabel();
        jlAPLastName = new javax.swing.JLabel();
        idSPList = new javax.swing.JScrollPane();
        idList = new javax.swing.JList<>();
        pNewPhone = new javax.swing.JPanel();
        tAPNumber = new javax.swing.JTextField();
        bAddPhone = new javax.swing.JButton();
        pCompany = new javax.swing.JPanel();
        cbCompany = new javax.swing.JComboBox<>();
        pRemove = new javax.swing.JPanel();
        idSPListRemovePerson = new javax.swing.JScrollPane();
        idListRemovePerson = new javax.swing.JList<>();
        pPersonInfoRemovePerson = new javax.swing.JPanel();
        jlAPIDRemovePerson = new javax.swing.JLabel();
        jlAPNameRemovePerson = new javax.swing.JLabel();
        jlAPLastNameRemovePerson = new javax.swing.JLabel();
        idSPListRemovePersonPhones = new javax.swing.JScrollPane();
        idListRemovePersonPhones = new javax.swing.JList<>();
        bRemovePerson = new javax.swing.JButton();
        bRemovePhone = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        menuOtros = new javax.swing.JMenu();
        menuOtrosConfig = new javax.swing.JMenuItem();
        menuOtrosAbout = new javax.swing.JMenuItem();

        othersConfig.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        othersConfig.setTitle("Research - Configuration");
        othersConfig.setMinimumSize(new java.awt.Dimension(230, 200));
        othersConfig.setResizable(false);
        othersConfig.setSize(new java.awt.Dimension(240, 200));
        othersConfig.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                othersConfigWindowClosed(evt);
            }
        });
        othersConfig.getContentPane().setLayout(new javax.swing.BoxLayout(othersConfig.getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        bGuardarConf.setText("Apply");
        bGuardarConf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGuardarConfActionPerformed(evt);
            }
        });

        labTemas.setText("Theme");

        temas.add("DarkMode");
        temas.add("LightMode");
        temas.setName(""); // NOI18N

        javax.swing.GroupLayout pOthersConfigLayout = new javax.swing.GroupLayout(pOthersConfig);
        pOthersConfig.setLayout(pOthersConfigLayout);
        pOthersConfigLayout.setHorizontalGroup(
            pOthersConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pOthersConfigLayout.createSequentialGroup()
                .addContainerGap(173, Short.MAX_VALUE)
                .addComponent(bGuardarConf)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pOthersConfigLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(labTemas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(temas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        pOthersConfigLayout.setVerticalGroup(
            pOthersConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pOthersConfigLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pOthersConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(temas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labTemas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addComponent(bGuardarConf)
                .addContainerGap())
        );

        othersConfig.getContentPane().add(pOthersConfig);

        othersAbout.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        othersAbout.setTitle("Research - About");
        othersAbout.setFocusable(false);
        othersAbout.setMinimumSize(null);
        othersAbout.setResizable(false);
        othersAbout.setSize(new java.awt.Dimension(340, 260));
        othersAbout.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                othersAboutWindowClosed(evt);
            }
        });
        othersAbout.getContentPane().setLayout(new javax.swing.BoxLayout(othersAbout.getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        othersBClose.setText("Close");
        othersBClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                othersBCloseActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Group Members:\n        Alvarado Aguero Ailer Josue\n        Arce Vargas Armando Andres\n        Ávila Ramírez Paublo Alexander\n        Martinez Rivera German Josue\n\nDatabase:\n        Oracle NoSQL\n                                                                                2023");
        jTextArea1.setBorder(null);
        jTextArea1.setFocusable(false);
        jTextArea1.setOpaque(false);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout pOthersAboutLayout = new javax.swing.GroupLayout(pOthersAbout);
        pOthersAbout.setLayout(pOthersAboutLayout);
        pOthersAboutLayout.setHorizontalGroup(
            pOthersAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pOthersAboutLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pOthersAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pOthersAboutLayout.createSequentialGroup()
                        .addGap(0, 310, Short.MAX_VALUE)
                        .addComponent(othersBClose))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        pOthersAboutLayout.setVerticalGroup(
            pOthersAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pOthersAboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(othersBClose)
                .addContainerGap())
        );

        othersAbout.getContentPane().add(pOthersAbout);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Research - User GUI");
        setLocationByPlatform(true);
        setMaximumSize(null);
        setPreferredSize(new java.awt.Dimension(480, 580));
        setResizable(false);
        setSize(new java.awt.Dimension(480, 580));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        tabbedMain.setPreferredSize(new java.awt.Dimension(74, 42));

        pAddPerson.setBackground(new java.awt.Color(255, 255, 255));

        bAddPerson.setText("Add Person");
        bAddPerson.setMaximumSize(new java.awt.Dimension(100, 32));
        bAddPerson.setMinimumSize(new java.awt.Dimension(100, 32));
        bAddPerson.setPreferredSize(new java.awt.Dimension(100, 32));
        bAddPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddPersonActionPerformed(evt);
            }
        });

        textName.setBorder(javax.swing.BorderFactory.createTitledBorder("Name"));

        textLastName.setBorder(javax.swing.BorderFactory.createTitledBorder("Last Name"));

        textID.setBorder(javax.swing.BorderFactory.createTitledBorder("Identification"));

        javax.swing.GroupLayout pAddPersonLayout = new javax.swing.GroupLayout(pAddPerson);
        pAddPerson.setLayout(pAddPersonLayout);
        pAddPersonLayout.setHorizontalGroup(
            pAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAddPersonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bAddPerson, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                    .addComponent(textID, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(textName)
                    .addComponent(textLastName))
                .addContainerGap())
        );
        pAddPersonLayout.setVerticalGroup(
            pAddPersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pAddPersonLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(textID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bAddPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(311, Short.MAX_VALUE))
        );

        tabbedMain.addTab("Add Person", pAddPerson);

        pAddPhone.setBackground(new java.awt.Color(255, 255, 255));

        pPersonInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Person's information"));
        pPersonInfo.setToolTipText("");
        pPersonInfo.setOpaque(false);

        jlAPID.setText(" ");
        jlAPID.setBorder(javax.swing.BorderFactory.createTitledBorder("Identificaction:"));
        jlAPID.setMaximumSize(new java.awt.Dimension(13, 60));
        jlAPID.setMinimumSize(new java.awt.Dimension(13, 60));
        jlAPID.setPreferredSize(new java.awt.Dimension(13, 58));

        jlAPName.setText(" ");
        jlAPName.setBorder(javax.swing.BorderFactory.createTitledBorder("Name:"));
        jlAPName.setMaximumSize(new java.awt.Dimension(13, 60));
        jlAPName.setMinimumSize(new java.awt.Dimension(13, 60));
        jlAPName.setPreferredSize(new java.awt.Dimension(13, 58));

        jlAPLastName.setText(" ");
        jlAPLastName.setBorder(javax.swing.BorderFactory.createTitledBorder("LastName:"));
        jlAPLastName.setMaximumSize(new java.awt.Dimension(13, 60));
        jlAPLastName.setMinimumSize(new java.awt.Dimension(13, 60));
        jlAPLastName.setPreferredSize(new java.awt.Dimension(13, 58));

        javax.swing.GroupLayout pPersonInfoLayout = new javax.swing.GroupLayout(pPersonInfo);
        pPersonInfo.setLayout(pPersonInfoLayout);
        pPersonInfoLayout.setHorizontalGroup(
            pPersonInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pPersonInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pPersonInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlAPID, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlAPName, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlAPLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pPersonInfoLayout.setVerticalGroup(
            pPersonInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pPersonInfoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlAPID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlAPName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlAPLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        idSPList.setBackground(new java.awt.Color(255, 255, 255));
        idSPList.setViewportBorder(javax.swing.BorderFactory.createTitledBorder("Identifications"));

        idList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idListMouseClicked(evt);
            }
        });
        idList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                idListValueChanged(evt);
            }
        });
        idSPList.setViewportView(idList);

        pNewPhone.setBorder(javax.swing.BorderFactory.createTitledBorder("New Phone"));
        pNewPhone.setOpaque(false);

        tAPNumber.setBorder(javax.swing.BorderFactory.createTitledBorder("Number"));

        bAddPhone.setText("Add Phone");
        bAddPhone.setMaximumSize(new java.awt.Dimension(100, 32));
        bAddPhone.setMinimumSize(new java.awt.Dimension(100, 32));
        bAddPhone.setPreferredSize(new java.awt.Dimension(100, 32));
        bAddPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddPhoneActionPerformed(evt);
            }
        });

        pCompany.setBorder(javax.swing.BorderFactory.createTitledBorder("Company"));
        pCompany.setOpaque(false);
        pCompany.setLayout(new javax.swing.BoxLayout(pCompany, javax.swing.BoxLayout.LINE_AXIS));

        cbCompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Claro", "Movistar", "Kolbi" }));
        pCompany.add(cbCompany);

        javax.swing.GroupLayout pNewPhoneLayout = new javax.swing.GroupLayout(pNewPhone);
        pNewPhone.setLayout(pNewPhoneLayout);
        pNewPhoneLayout.setHorizontalGroup(
            pNewPhoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pNewPhoneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pNewPhoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tAPNumber)
                    .addComponent(pCompany, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                    .addComponent(bAddPhone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pNewPhoneLayout.setVerticalGroup(
            pNewPhoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pNewPhoneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tAPNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bAddPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bAddPhone.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout pAddPhoneLayout = new javax.swing.GroupLayout(pAddPhone);
        pAddPhone.setLayout(pAddPhoneLayout);
        pAddPhoneLayout.setHorizontalGroup(
            pAddPhoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pAddPhoneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(idSPList, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pAddPhoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pPersonInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pNewPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );
        pAddPhoneLayout.setVerticalGroup(
            pAddPhoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAddPhoneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pAddPhoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(idSPList)
                    .addGroup(pAddPhoneLayout.createSequentialGroup()
                        .addComponent(pPersonInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pNewPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabbedMain.addTab("Add Phone", pAddPhone);

        pRemove.setBackground(new java.awt.Color(255, 255, 255));

        idSPListRemovePerson.setBackground(new java.awt.Color(255, 255, 255));
        idSPListRemovePerson.setViewportBorder(javax.swing.BorderFactory.createTitledBorder("Identifications"));
        idSPListRemovePerson.setPreferredSize(new java.awt.Dimension(269, 470));

        idListRemovePerson.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idListRemovePersonMouseClicked(evt);
            }
        });
        idListRemovePerson.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                idListRemovePersonValueChanged(evt);
            }
        });
        idSPListRemovePerson.setViewportView(idListRemovePerson);

        pPersonInfoRemovePerson.setBorder(javax.swing.BorderFactory.createTitledBorder("Person's information"));
        pPersonInfoRemovePerson.setToolTipText("");
        pPersonInfoRemovePerson.setMaximumSize(new java.awt.Dimension(244, 221));
        pPersonInfoRemovePerson.setMinimumSize(new java.awt.Dimension(244, 221));
        pPersonInfoRemovePerson.setName(""); // NOI18N
        pPersonInfoRemovePerson.setOpaque(false);
        pPersonInfoRemovePerson.setLayout(new java.awt.GridBagLayout());

        jlAPIDRemovePerson.setText(" ");
        jlAPIDRemovePerson.setBorder(javax.swing.BorderFactory.createTitledBorder("Identificaction:"));
        jlAPIDRemovePerson.setMaximumSize(new java.awt.Dimension(13, 60));
        jlAPIDRemovePerson.setMinimumSize(new java.awt.Dimension(13, 60));
        jlAPIDRemovePerson.setPreferredSize(new java.awt.Dimension(13, 58));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 240;
        pPersonInfoRemovePerson.add(jlAPIDRemovePerson, gridBagConstraints);

        jlAPNameRemovePerson.setText(" ");
        jlAPNameRemovePerson.setBorder(javax.swing.BorderFactory.createTitledBorder("Name:"));
        jlAPNameRemovePerson.setMaximumSize(new java.awt.Dimension(13, 60));
        jlAPNameRemovePerson.setMinimumSize(new java.awt.Dimension(13, 60));
        jlAPNameRemovePerson.setPreferredSize(new java.awt.Dimension(13, 58));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        pPersonInfoRemovePerson.add(jlAPNameRemovePerson, gridBagConstraints);

        jlAPLastNameRemovePerson.setText(" ");
        jlAPLastNameRemovePerson.setBorder(javax.swing.BorderFactory.createTitledBorder("LastName:"));
        jlAPLastNameRemovePerson.setMaximumSize(new java.awt.Dimension(13, 60));
        jlAPLastNameRemovePerson.setMinimumSize(new java.awt.Dimension(13, 60));
        jlAPLastNameRemovePerson.setPreferredSize(new java.awt.Dimension(13, 58));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        pPersonInfoRemovePerson.add(jlAPLastNameRemovePerson, gridBagConstraints);

        idSPListRemovePersonPhones.setBackground(new java.awt.Color(255, 255, 255));
        idSPListRemovePersonPhones.setViewportBorder(javax.swing.BorderFactory.createTitledBorder("Person's phone numbers"));
        idSPListRemovePersonPhones.setMaximumSize(new java.awt.Dimension(280, 210));
        idSPListRemovePersonPhones.setMinimumSize(new java.awt.Dimension(280, 210));
        idSPListRemovePersonPhones.setPreferredSize(new java.awt.Dimension(280, 210));
        idSPListRemovePersonPhones.setViewportView(idListRemovePersonPhones);

        bRemovePerson.setText("Remove Person");
        bRemovePerson.setPreferredSize(new java.awt.Dimension(138, 32));
        bRemovePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRemovePersonActionPerformed(evt);
            }
        });

        bRemovePhone.setText("Remove Phone");
        bRemovePhone.setPreferredSize(new java.awt.Dimension(138, 32));
        bRemovePhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRemovePhoneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pRemoveLayout = new javax.swing.GroupLayout(pRemove);
        pRemove.setLayout(pRemoveLayout);
        pRemoveLayout.setHorizontalGroup(
            pRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pRemoveLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(idSPListRemovePerson, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(pRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pPersonInfoRemovePerson, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pRemoveLayout.createSequentialGroup()
                        .addComponent(bRemovePerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bRemovePhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(idSPListRemovePersonPhones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pRemoveLayout.setVerticalGroup(
            pRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pRemoveLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pRemoveLayout.createSequentialGroup()
                        .addComponent(pPersonInfoRemovePerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idSPListRemovePersonPhones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bRemovePerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bRemovePhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(idSPListRemovePerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabbedMain.addTab("Remove Person | Phone", pRemove);

        getContentPane().add(tabbedMain);

        menuOtros.setText("Others");

        menuOtrosConfig.setText("Configuration");
        menuOtrosConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuOtrosConfigActionPerformed(evt);
            }
        });
        menuOtros.add(menuOtrosConfig);

        menuOtrosAbout.setText("About");
        menuOtrosAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuOtrosAboutActionPerformed(evt);
            }
        });
        menuOtros.add(menuOtrosAbout);

        menuBar.add(menuOtros);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuOtrosConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuOtrosConfigActionPerformed
        setEnabled(false);
        UIController.centerDialog(othersConfig);
        othersConfig.setVisible(true);
        othersConfig.setEnabled(true);
    }//GEN-LAST:event_menuOtrosConfigActionPerformed

    private void menuOtrosAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuOtrosAboutActionPerformed
        setEnabled(false);
        UIController.centerDialog(othersAbout);
        othersAbout.setVisible(true);
        othersAbout.setEnabled(true);
    }//GEN-LAST:event_menuOtrosAboutActionPerformed
    
    private void loadData(){
        phoneGuideController = connection.getPhoneGuide();
        personController = connection.getPeople();
        phoneController = connection.getPhone();
    }
 
    private void bAddPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddPersonActionPerformed
        String errorTXT = "";
        String id = textID.getText();
        String name = textName.getText();
        String lastName = textLastName.getText();
        if (id.isEmpty() || name.isEmpty() || lastName.isEmpty()) {
            errorTXT = "Please complete all fields.";
        } else if (personController.personExists(Integer.parseInt(id))){
            errorTXT = "A person with this identification already exists.";
        } else if (id.length() != 9) {
            errorTXT = "Please enter an 9-digit number.";
        } else{
            System.out.println("Nuevo persona creada: " + id + " | Nombre: " + name + " | Apellido: " + lastName);
            Person person = new Person(Integer.parseInt(id), name, lastName);
            connection.insertPeople(Integer.parseInt(id), name, lastName);
            personController.addPerson(person);
            updateIDList();
            
            textID.setText("");
            textName.setText("");
            textLastName.setText("");
            
            idList.setEnabled(true);
            idListRemovePerson.setEnabled(true);
            bRemovePerson.setEnabled(true);
            bAddPhone.setEnabled(true);
            
            Color tColor = isDarkMode ? new Color(32, 32, 32) : new Color(255, 255, 255);
            String msjText = String.format("The insertion operation for the person with ID %s\nhas been completed successfully in the database.", id);
            JDialog dialog = UIController.makeDialog(msjText, tColor, JOptionPane.INFORMATION_MESSAGE, "Information");
            dialog.setVisible(true);  
        }
        if (!errorTXT.isEmpty()){
            Color tColor = isDarkMode ? new Color(32, 32, 32) : new Color(255, 255, 255);
            JDialog dialog = UIController.makeDialog(errorTXT, tColor, JOptionPane.ERROR_MESSAGE, "Error");
            dialog.setVisible(true);  
        }
    }//GEN-LAST:event_bAddPersonActionPerformed

    private void bAddPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddPhoneActionPerformed
        String errorTXT = "";
        String phoneNumberSTR = tAPNumber.getText();
        int phoneNumberINT = Integer.parseInt(phoneNumberSTR);
        String selectedPerson = idList.getSelectedValue();
        String company = cbCompany.getSelectedItem().toString();
        
        if (phoneNumberSTR.length() == 8 && selectedPerson != null){
            boolean exist = phoneController.exist(phoneNumberINT);
            if (exist){
                errorTXT = "This phone number is already in the database.";
            } else {
                System.out.println("Nuevo número creado: " + phoneNumberSTR + " | PersonID: " + idList.getSelectedValue());
                tAPNumber.setText("");
                
                Phone phone = new Phone(phoneNumberINT, company);
                phoneController.addPhone(phone);
                connection.insertPhone(phoneNumberINT, company);
                
                Person person = personController.getPersonById(Integer.parseInt(idList.getSelectedValue()));
                PhoneGuide pGuide = new PhoneGuide(person.getIdPerson(), phoneNumberINT);
                phoneGuideController.addPhoneGuide(pGuide);
                connection.insertPhoneGuide(person.getIdPerson(), phoneNumberINT);
                
                String selectedIDRemovePerson = idListRemovePerson.getSelectedValue();
                
                if (selectedPerson.equals(selectedIDRemovePerson)){
                    List<Integer> listPhones = phoneGuideController.getPersonsPhones(Integer.parseInt(selectedPerson));
                    updateIDListAUX(idListRemovePersonPhones, listPhones);
                    bRemovePhone.setEnabled(true);
                }
                Color tColor = isDarkMode ? new Color(32, 32, 32) : new Color(255, 255, 255);
                String msjText = String.format("The insertion operation for the phone %s\nhas been completed successfully in the database.", phoneNumberSTR);
                JDialog dialog = UIController.makeDialog(msjText, tColor, JOptionPane.INFORMATION_MESSAGE, "Information");
                dialog.setVisible(true);  
            }
        } else {   
            errorTXT = "Please enter an 8-digit number.";
            if (phoneNumberSTR.length() >= 1){
                if (phoneNumberSTR.charAt(0) == '0'){
                    errorTXT = "Incorrect phone number, it cannot start with 0.";
                }
            }
        }
        if (!errorTXT.isEmpty()){
            Color tColor = isDarkMode ? new Color(32, 32, 32) : new Color(255, 255, 255);
            JDialog dialog = UIController.makeDialog(errorTXT, tColor, JOptionPane.ERROR_MESSAGE, "Error");
            dialog.setVisible(true);
        }
    }//GEN-LAST:event_bAddPhoneActionPerformed

    private void bGuardarConfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGuardarConfActionPerformed
        UIController.focusMainGUI(this);
        if ("DarkMode".equals(temas.getSelectedItem())){
            UIController.setDarkMode(toPrincipalColor, componentTrees, this);
            isDarkMode = true;
        } else {
            UIController.setLightMode(toPrincipalColor, componentTrees, this);
            isDarkMode = false;
        }
        othersConfig.dispose();
    }//GEN-LAST:event_bGuardarConfActionPerformed

    private void othersConfigWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_othersConfigWindowClosed
        UIController.focusMainGUI(this);
        othersConfig.dispose();
    }//GEN-LAST:event_othersConfigWindowClosed

    private void idListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idListMouseClicked
        if (idList.getSelectedValue() != null){
            System.out.println("Persona seleccionada: " + idList.getSelectedValue());

            String selectedValue = idList.getSelectedValue();
            Person tPerson = personController.getPersonById(Integer.parseInt(selectedValue));
            
            jlAPID.setText(selectedValue);
            jlAPName.setText(tPerson.getName());
            jlAPLastName.setText(tPerson.getLastName());
        }
    }//GEN-LAST:event_idListMouseClicked

    private void idListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_idListValueChanged
        idListMouseClicked(null);
    }//GEN-LAST:event_idListValueChanged

    private void bRemovePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRemovePersonActionPerformed
        boolean delete = false;
        int personSelected = -1;
        List<Integer> listPhones = new ArrayList();
        if (idListRemovePerson.getSelectedValue() != null){
            personSelected = Integer.parseInt(idListRemovePerson.getSelectedValue());
            listPhones = connection.getPhonesByPeopleID(personSelected);
            String errorTXT = String.format("Are you sure you want to delete this person from the database?\n%s phone number%s would be deleted.", listPhones.size(), listPhones.size() > 1 ? "s" : "");
            Color tColor = isDarkMode ? new Color(32, 32, 32) : new Color(255, 255, 255);
            delete = UIController.makeYesNoDialog(errorTXT, tColor);
        }
        if (delete){
            System.out.println(listPhones);
            
            personController.removePerson(personSelected);
            connection.removePerson(personSelected);
            for (int phoneNumber: listPhones){
                connection.removePhone(phoneNumber);
                connection.removePhoneGuide(personSelected, phoneNumber);
                
                phoneController.removePhone(phoneNumber);
            }
            
            Color tColor = isDarkMode ? new Color(32, 32, 32) : new Color(255, 255, 255);
            String msjText = String.format("The delete operation for the person with ID %s\n"
                    + "has been completed successfully in the database.", personSelected);
            int nPhones = listPhones.size();
            if (nPhones >= 1){
                msjText += String.format("\n%s phone%s belonging to the deleted\nperson have been removed.", nPhones, nPhones > 1 ? "s" : "");
            }
            JDialog dialog = UIController.makeDialog(msjText, tColor, JOptionPane.INFORMATION_MESSAGE, "Information");
            dialog.setVisible(true);  
            updateIDList();
            if (!phoneGuideController.getAllPhoneGuides().isEmpty()){
                personSelected = Integer.parseInt(idListRemovePerson.getSelectedValue());
                listPhones = phoneGuideController.getPersonsPhones(personSelected);
                updateIDListAUX(idListRemovePersonPhones, listPhones);
            } else{
                updateIDListAUX(idListRemovePersonPhones, new ArrayList());
            }
        }
    }//GEN-LAST:event_bRemovePersonActionPerformed

    private void idListRemovePersonValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_idListRemovePersonValueChanged
        idListRemovePersonMouseClicked(null);
    }//GEN-LAST:event_idListRemovePersonValueChanged

    private void idListRemovePersonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idListRemovePersonMouseClicked
        if (idListRemovePerson.getSelectedValue() != null){
            System.out.println("Persona seleccionada: " + idListRemovePerson.getSelectedValue());

            String selectedValue = idListRemovePerson.getSelectedValue();
            Person tPerson = personController.getPersonById(Integer.parseInt(selectedValue));

            jlAPIDRemovePerson.setText(selectedValue);
            jlAPNameRemovePerson.setText(tPerson.getName());
            jlAPLastNameRemovePerson.setText(tPerson.getLastName());

            List<Integer> listPhones = phoneGuideController.getPersonsPhones(Integer.parseInt(selectedValue));
            updateIDListAUX(idListRemovePersonPhones, listPhones);
            bRemovePhone.setEnabled(!listPhones.isEmpty());
            bRemovePerson.setEnabled(!personController.getAllPersons().isEmpty());
        }
    }//GEN-LAST:event_idListRemovePersonMouseClicked

    private void bRemovePhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRemovePhoneActionPerformed
        boolean delete = false;
        int phoneSelected = -1;
        int personSelected = -1;
        if (idListRemovePersonPhones.getSelectedValue() != null){
            personSelected = Integer.parseInt(idListRemovePerson.getSelectedValue());
            phoneSelected =  Integer.parseInt(idListRemovePersonPhones.getSelectedValue());;
            
            String errorTXT = String.format("Are you sure you want to delete the phone number %s?", phoneSelected);
            Color tColor = isDarkMode ? new Color(32, 32, 32) : new Color(255, 255, 255);
            delete = UIController.makeYesNoDialog(errorTXT, tColor);
        }
        if (delete){
            phoneController.removePhone(phoneSelected);
            phoneGuideController.removePhone(phoneSelected);
            connection.removePhone(phoneSelected);
            connection.removePhoneGuide(personSelected, phoneSelected);
            
            List<Integer> listPhones = phoneGuideController.getPersonsPhones(personSelected);
            updateIDListAUX(idListRemovePersonPhones, listPhones);
            
            Color tColor = isDarkMode ? new Color(32, 32, 32) : new Color(255, 255, 255);
            String msjText = String.format("The delete operation for the phone %s\nhas been completed successfully in the database.", phoneSelected);
            JDialog dialog = UIController.makeDialog(msjText, tColor, JOptionPane.INFORMATION_MESSAGE, "Information");
            dialog.setVisible(true);  
        }
    }//GEN-LAST:event_bRemovePhoneActionPerformed

    private void othersBCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_othersBCloseActionPerformed
        UIController.focusMainGUI(this);
        othersAbout.dispose();
    }//GEN-LAST:event_othersBCloseActionPerformed

    private void othersAboutWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_othersAboutWindowClosed
        UIController.focusMainGUI(this);
        othersAbout.dispose();
    }//GEN-LAST:event_othersAboutWindowClosed
    
    private void updateIDList(){
        updateIDListAUX(idList, personController.getAllPersonIds());
        updateIDListAUX(idListRemovePerson, personController.getAllPersonIds());
        
        if (personController.getAllPersonIds().isEmpty()){
            idList.setEnabled(false);
            idListRemovePerson.setEnabled(false);
            bRemovePhone.setEnabled(false);
            bRemovePerson.setEnabled(false);
            bAddPhone.setEnabled(false);
            updateIDListAUX(idListRemovePersonPhones, new ArrayList());
            
            jlAPIDRemovePerson.setText("");
            jlAPID.setText("");
            jlAPLastName.setText("");
            jlAPLastNameRemovePerson.setText("");
            jlAPName.setText("");
            jlAPNameRemovePerson.setText("");
        }
    }
    
    private void updateIDListAUX(JList jList, List<Integer> listData){
        jList.clearSelection();
        jList.setListData(UIController.makeListData(listData));
        if (listData.isEmpty()){
            jList.clearSelection();
        } else{
            jList.setSelectedIndex(0);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AdminGUI(true).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAddPerson;
    private javax.swing.JButton bAddPhone;
    private javax.swing.JButton bGuardarConf;
    private javax.swing.JButton bRemovePerson;
    private javax.swing.JButton bRemovePhone;
    private javax.swing.JComboBox<String> cbCompany;
    private javax.swing.JList<String> idList;
    private javax.swing.JList<String> idListRemovePerson;
    private javax.swing.JList<String> idListRemovePersonPhones;
    private javax.swing.JScrollPane idSPList;
    private javax.swing.JScrollPane idSPListRemovePerson;
    private javax.swing.JScrollPane idSPListRemovePersonPhones;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel jlAPID;
    private javax.swing.JLabel jlAPIDRemovePerson;
    private javax.swing.JLabel jlAPLastName;
    private javax.swing.JLabel jlAPLastNameRemovePerson;
    private javax.swing.JLabel jlAPName;
    private javax.swing.JLabel jlAPNameRemovePerson;
    private javax.swing.JLabel labTemas;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuOtros;
    private javax.swing.JMenuItem menuOtrosAbout;
    private javax.swing.JMenuItem menuOtrosConfig;
    private javax.swing.JDialog othersAbout;
    private javax.swing.JButton othersBClose;
    private javax.swing.JDialog othersConfig;
    private javax.swing.JPanel pAddPerson;
    private javax.swing.JPanel pAddPhone;
    private javax.swing.JPanel pCompany;
    private javax.swing.JPanel pNewPhone;
    private javax.swing.JPanel pOthersAbout;
    private javax.swing.JPanel pOthersConfig;
    private javax.swing.JPanel pPersonInfo;
    private javax.swing.JPanel pPersonInfoRemovePerson;
    private javax.swing.JPanel pRemove;
    private javax.swing.JTextField tAPNumber;
    private javax.swing.JTabbedPane tabbedMain;
    private java.awt.Choice temas;
    private javax.swing.JTextField textID;
    private javax.swing.JTextField textLastName;
    private javax.swing.JTextField textName;
    // End of variables declaration//GEN-END:variables
}
